import 'package:flutter/material.dart';
import 'package:frontend/models/user_profile_model.dart';
import 'package:frontend/models/login/storage_service.dart';
import 'package:frontend/pages/additem_page.dart';
import 'package:frontend/services/api_service.dart';
import 'package:frontend/pages/edit_profile_page.dart';
import 'package:frontend/widgets/profile/profile_grid.dart';
import 'package:frontend/widgets/profile/profile_header.dart';
import 'dart:convert';

// 1. ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å StatelessWidget ‡πÄ‡∏õ‡πá‡∏ô StatefulWidget
class ProfilePage extends StatefulWidget {
  const ProfilePage({super.key});

  @override
  State<ProfilePage> createState() => _ProfilePageState();
}

class _ProfilePageState extends State<ProfilePage> {
  // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ Future ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Profile
  late Future<ProfileResponse> _profileFuture;

  @override
  void initState() {
    super.initState();
    // 3. ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á
    _profileFuture = _fetchProfileData();
  }

  Future<ProfileResponse> _fetchProfileData() async {
    // 1. ‡∏î‡∏∂‡∏á userString ‡∏à‡∏≤‡∏Å Storage
    final userString = await UserStorageService().readUserData();

    if (userString == null) {
      // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡∏Å‡πá‡πÇ‡∏¢‡∏ô Error ‡πÑ‡∏õ‡πÄ‡∏•‡∏¢
      throw Exception('User data not found in storage');
    }

    // 2. ‡πÅ‡∏õ‡∏•‡∏á String ‡πÄ‡∏õ‡πá‡∏ô Map (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢)
    final Map<String, dynamic> userDataMap = jsonDecode(userString);

    // 3. ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ email ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏à‡∏≤‡∏Å Map ‡∏î‡πâ‡∏ß‡∏¢ key 'email'
    final String? email = userDataMap['email'];

    if (email == null) {
      // ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏°‡∏µ key email ‡∏Å‡πá‡πÇ‡∏¢‡∏ô Error
      throw Exception('Email not found in user data');
    }

    // 4. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ ApiService ‡∏î‡πâ‡∏ß‡∏¢ email ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤‡πÑ‡∏î‡πâ
    return ApiService().getUserProfile(email);
  }

  @override
  Widget build(BuildContext context) {
    // 4. ‡πÉ‡∏ä‡πâ FutureBuilder ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á Future
    return FutureBuilder<ProfileResponse>(
      future: _profileFuture,
      builder: (context, snapshot) {
        // ‡∏Å‡∏£‡∏ì‡∏µ: ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        if (snapshot.connectionState == ConnectionState.waiting) {
          return const Center(child: CircularProgressIndicator());
        }

        // ‡∏Å‡∏£‡∏ì‡∏µ: ‡πÄ‡∏Å‡∏¥‡∏î Error
        if (snapshot.hasError) {
          return Center(child: Text('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${snapshot.error}'));
        }

        // ‡∏Å‡∏£‡∏ì‡∏µ: ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        if (!snapshot.hasData) {
          return const Center(child: Text('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå'));
        }

        // ‡∏Å‡∏£‡∏ì‡∏µ: ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!
        final profileResponse = snapshot.data!;
        final userProfile = profileResponse.user;

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡∏´‡∏•‡∏±‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á
       return Scaffold(
        body: CustomScrollView(
          slivers: [
            SliverToBoxAdapter(
              child: ProfileHeader(
                username: userProfile.name,
                location: userProfile.location ?? '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏',
                avatarUrl: userProfile.profilePicture ??
                    'https://via.placeholder.com/150',
                onEdit: () async {
                  final updatedProfile =
                      await showModalBottomSheet<UserProfile>(
                    context: context,
                    isScrollControlled: true,
                    shape: const RoundedRectangleBorder(
                      borderRadius: BorderRadius.vertical(top: Radius.circular(16)),
                    ),
                    builder: (context) {
                      return EditProfilePage(currentUserProfile: userProfile);
                    },
                  );

                  if (updatedProfile != null) {
                    setState(() {
                      _profileFuture = _fetchProfileData();
                    });
                  }
                },
              ),
            ),
            ProfileGrid(
              images: const [
                'https://images.unsplash.com/photo-1520975916090-3105956dac38?w=800',
                'https://images.unsplash.com/photo-1517245386807-bb43f82c33c4?w=800',
              ],
            ),
          ],
        ),

        // üëá ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏°‡πÜ ‡∏•‡πà‡∏≤‡∏á‡∏Ç‡∏ß‡∏≤
        floatingActionButton: FloatingActionButton(
          onPressed: () {
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => const AddItemPage()),
            );
          },
          backgroundColor: Color(0xFF5B7C6E), // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ
          shape: const CircleBorder(),
          child: const Icon(Icons.add, color: Colors.white),
        ),
        floatingActionButtonLocation: FloatingActionButtonLocation.endFloat,
      );

        

      },
    );
  }
}
